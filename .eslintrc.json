{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "parserOptions": {
    "project": ["tsconfig.json"],
    "createDefaultProgram": true
  },
  "plugins": ["unused-imports"],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "prettier"
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "warn",
          {
            "vars": "all",
            "varsIgnorePattern": "^_",
            "args": "after-used",
            "argsIgnorePattern": "^_"
          }
        ],
        "brace-style": ["error", "1tbs"],
        "eqeqeq": "error",
        "no-else-return": "error",
        "no-trailing-spaces": "error",
        "no-var": "error",
        "object-shorthand": ["error", "properties"],
        "prefer-const": "error",
        "prefer-object-spread": "error",
        "prefer-template": "error",
        "no-console": [
          "error",
          {
            "allow": ["warn", "error"]
          }
        ],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": ["classProperty", "variable"],
            "types": ["boolean"],
            "format": ["PascalCase"],
            "prefix": ["is", "should", "has", "can", "did", "will"]
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@typescript-eslint/member-ordering": "warn",
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "no-public",
            "overrides": {
              "parameterProperties": "explicit"
            }
          }
        ],
        "@angular-eslint/sort-lifecycle-methods": ["error"],
        "@angular-eslint/contextual-decorator": ["error"],
        "@angular-eslint/no-conflicting-lifecycle": ["error"],
        "@angular-eslint/no-lifecycle-call": ["error"]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended",
        "plugin:@angular-eslint/template/accessibility",
        "prettier"
      ],
      "rules": {
        "@angular-eslint/template/conditional-complexity": [
          "error",
          {
            "maxComplexity": 5
          }
        ],
        "@angular-eslint/template/no-any": ["error"],
        "@angular-eslint/template/no-interpolation-in-attributes": ["error"],
        "@angular-eslint/template/no-negated-async": ["error"],
        "@angular-eslint/template/prefer-control-flow": ["error"],
        "@angular-eslint/template/prefer-self-closing-tags": ["error"]
      }
    }
  ]
}
